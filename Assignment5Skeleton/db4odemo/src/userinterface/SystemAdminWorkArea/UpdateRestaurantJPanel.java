/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Restaurant.Restaurant;
import Business.Restaurant.RestaurantDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kinjal
 */
public class UpdateRestaurantJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateRestaurantJPanel
     */
    public RestaurantDirectory restaurantDirectory;
    public JPanel container;
    public EcoSystem system;

    public UpdateRestaurantJPanel(JPanel container, EcoSystem system, RestaurantDirectory restaurantDirectory) {
        initComponents();
        this.container = container;
        this.restaurantDirectory = restaurantDirectory;
        this.system = system;

        populateRestaurants();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRestaurantList = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRestaurantList = new javax.swing.JTable();
        addRestaurantBtn = new javax.swing.JButton();
        viewRestaurantDetailsBtn = new javax.swing.JButton();
        deleteRestaurantBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 102));

        lblRestaurantList.setBackground(new java.awt.Color(255, 153, 0));
        lblRestaurantList.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblRestaurantList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRestaurantList.setText("Restaurant List");
        lblRestaurantList.setOpaque(true);

        tblRestaurantList.setBackground(new java.awt.Color(255, 255, 204));
        tblRestaurantList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Restaurant No", "Name", "Manager Name", "Street Address", "Zipcode", "Contact No", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRestaurantList);
        if (tblRestaurantList.getColumnModel().getColumnCount() > 0) {
            tblRestaurantList.getColumnModel().getColumn(6).setResizable(false);
        }

        addRestaurantBtn.setBackground(new java.awt.Color(255, 153, 0));
        addRestaurantBtn.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        addRestaurantBtn.setText("Add Restaurant");
        addRestaurantBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRestaurantBtnActionPerformed(evt);
            }
        });

        viewRestaurantDetailsBtn.setBackground(new java.awt.Color(255, 153, 0));
        viewRestaurantDetailsBtn.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        viewRestaurantDetailsBtn.setText("View Details");
        viewRestaurantDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRestaurantDetailsBtnActionPerformed(evt);
            }
        });

        deleteRestaurantBtn.setBackground(new java.awt.Color(255, 153, 0));
        deleteRestaurantBtn.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        deleteRestaurantBtn.setText("Delete Restaurant");
        deleteRestaurantBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRestaurantBtnActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(255, 153, 0));
        backBtn.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 875, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addRestaurantBtn)
                        .addGap(18, 18, 18)
                        .addComponent(viewRestaurantDetailsBtn)
                        .addGap(18, 18, 18)
                        .addComponent(deleteRestaurantBtn))
                    .addComponent(lblRestaurantList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblRestaurantList)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteRestaurantBtn)
                    .addComponent(viewRestaurantDetailsBtn)
                    .addComponent(addRestaurantBtn)
                    .addComponent(backBtn))
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateRestaurants() {
        DefaultTableModel model = (DefaultTableModel) tblRestaurantList.getModel();

        model.setRowCount(0);
        for (UserAccount ua : system.getUserAccountDirectory().getUserAccountList()) {
            for (Restaurant restaurant : restaurantDirectory.getRestaurantDirectory()) {
                if (restaurant.getRestaurantNo().equalsIgnoreCase(ua.getEmployee().getName())) {
                    Object[] row = new Object[7];
                    row[0] = restaurant.getRestaurantNo();
                    row[1] = restaurant.getRestaurantName();
                    row[2] = restaurant.getOperatorName();
                    row[3] = restaurant.getStreetAddress();
                    row[4] = restaurant.getZipcode();
                    row[5] = restaurant.getMobileNo();
                    row[6] = restaurant.getEmail();
                    model.addRow(row);
                }
            }
        }
    }

    private void addRestaurantBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRestaurantBtnActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) container.getLayout();
        AddRestaurantJPanel createRestaurantJPanel = new AddRestaurantJPanel(container, system, restaurantDirectory);
        container.add(createRestaurantJPanel);
        layout.next(container);
    }//GEN-LAST:event_addRestaurantBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        Component[] componentArray = container.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backBtnActionPerformed

    private void deleteRestaurantBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRestaurantBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRestaurantList.getSelectedRow();
        int count = tblRestaurantList.getSelectedRowCount();
        if (count == 1) {
            if (selectedRow >= 0) {
                int selectionButton = JOptionPane.YES_NO_OPTION;
                int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete??", "Warning", selectionButton);
                if (selectionResult == JOptionPane.YES_OPTION) {
                    restaurantDirectory.deleteRestaurant(selectedRow, system);
                    populateRestaurants();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_deleteRestaurantBtnActionPerformed

    private void viewRestaurantDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRestaurantDetailsBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRestaurantList.getSelectedRow();
        int count = tblRestaurantList.getSelectedRowCount();
        if (count == 1) {
            if (selectedRow >= 0) {
                CardLayout layout = (CardLayout) container.getLayout();
                Restaurant restaurant = restaurantDirectory.getRestaurantNo(selectedRow);
                ViewRestaurantsJPanel viewRestaurantsJPanel = new ViewRestaurantsJPanel(container, restaurant,system);
                container.add(viewRestaurantsJPanel);
                layout.next(container);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_viewRestaurantDetailsBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRestaurantBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deleteRestaurantBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRestaurantList;
    private javax.swing.JTable tblRestaurantList;
    private javax.swing.JButton viewRestaurantDetailsBtn;
    // End of variables declaration//GEN-END:variables
}
